<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Kinect.BodyTracking</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Body">
            <summary>
            Helper stack structure that allows easier access to body data.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Body.InvalidId">
            <summary>
            The invalid body id value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Body.Frame">
            <summary>
            Gets frame on which this body was detected.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Body.Index">
            <summary>
            Gets the body index in frame.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Body.Id">
            <summary>
            Get the body id for a particular person <see cref="P:Microsoft.Azure.Kinect.BodyTracking.Body.Index" /> from stored <see cref="P:Microsoft.Azure.Kinect.BodyTracking.Body.Frame" />.
            </summary>
            <remarks>Called when the user has received a <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Frame" /> and wants to access the id of the body given a particular <see cref="P:Microsoft.Azure.Kinect.BodyTracking.Body.Index" />.</remarks>
            <seealso cref="M:Microsoft.Azure.Kinect.BodyTracking.Frame.GetBodyId(System.UInt32)" />
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Body.Skeleton">
            <summary>
            Get the joint information for a particular person <see cref="P:Microsoft.Azure.Kinect.BodyTracking.Body.Index" /> from stored <see cref="P:Microsoft.Azure.Kinect.BodyTracking.Body.Frame" />.
            </summary>
            <remarks>Called when the user has received a <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Frame" /> and wants to access the skeleton of the body given a particular <see cref="P:Microsoft.Azure.Kinect.BodyTracking.Body.Index" />.</remarks>
            <seealso cref="M:Microsoft.Azure.Kinect.BodyTracking.Frame.GetBodySkeleton(System.UInt32)" />
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException">
            <summary>
            Represents errors that occur when creating a tracker with the Azure Kinect Sensor Body Tracking SDK.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException" /> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException" /> class
            with a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingCreateException" /> class
            with serialized data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the
            exception being thrown.</param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext" />System.Runtime.Serialization.StreamingContext that
            contains contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException">
            <summary>
            Represents errors that occur when interacting with the Azure Kinect Body Tracking SDK.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException" /> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException" /> class
            with a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference
            (Nothing in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Exceptions.AzureKinectBodyTrackingException" /> class
            with serialized data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the
            exception being thrown.</param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext" />System.Runtime.Serialization.StreamingContext that
            contains contextual information about the source or destination.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Frame">
            <summary>
            Represents body tracking frame.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Frame.BodyIndexMapBackground">
            <summary>
            The pixel value that indicates the pixel belong to the background in the body id map.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Frame.NumberOfBodies">
            <summary>
            Get the number of people.
            </summary>
            <value>The number of detected bodies. 0 if the call fails.</value>
            <remarks>Called when the user has received a body frame and wants to access the data contained in it.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Frame.DeviceTimestamp">
            <summary>
            Get the body frame's device timestamp.
            </summary>
            <value>
            The timestamp of the body frame. If the frame is invalid this call will return 0. It is
            also possible for 0 to be a valid timestamp originating from the beginning of a recording or the start of streaming.
            </value>
            <remarks>Called when the user has received a body frame and wants to access the data contained in it.</remarks>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Frame.BodyIndexMap">
             <summary>
             Get the body index map.
             </summary>
             <remarks>
             Called when the user has received a body frame and wants to access the data contained in it.
            
             Body Index map is the body instance segmentation map. Each pixel maps to the corresponding pixel in the
             depth image or the IR image.The value for each pixel represents which body the pixel belongs to. It can be either
             background (<see cref="F:Microsoft.Azure.Kinect.BodyTracking.Frame.BodyIndexMapBackground" />) or the index of a detected <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Body" />.
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Kinect.BodyTracking.Frame.Capture">
            <summary>
            Get the original capture that is used to calculate this frame.
            </summary>
            <remarks>Called when the user has received a body frame and wants to access the data contained in it.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.GetBody(System.UInt32)">
            <summary>
            Gets the helper reference structure that can be used only on stack to get body data.
            </summary>
            <param name="index">The index of the body of which the body id information is queried.</param>
            <returns>Helper reference structure that can be used only on stack to get body data.</returns>
            <remarks>Called when the user has received a body frame and wants to access the data contained in it.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.GetBodyId(System.UInt32)">
            <summary>
            Get the body id for a particular person index from this frame.
            </summary>
            <param name="index">The index of the body of which the body id information is queried.</param>
            <returns>Returns the body id. All failures will return <see cref="F:Microsoft.Azure.Kinect.BodyTracking.Body.InvalidId" />.</returns>
            <remarks>Called when the user has received a body frame and wants to access the id of the body given a particular index.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.GetBodySkeleton(System.UInt32)">
            <summary>
            Get the joint information for a particular person index from this frame.
            </summary>
            <returns>If successful this contains the body skeleton information.</returns>
            <remarks>Called when the user has received a body frame and wants to access the skeleton of the body given a particular index.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.Reference">
            <summary>
            Creates a duplicate reference to the same Frame.
            </summary>
            <returns>A new Frame object representing the same data.</returns>
            <remarks>Creating a reference to the same frame does not copy the frame,
            or the data stored in the frame, but creates a new managed object representing
            the same frame data. Each object must be independently disposed. The lifetime of the
            underlying frame data will be equal or greater than all of the referenced Frame objects.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Frame" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Frame.Dispose(System.Boolean)">
            <summary>
            Disposes the resources held by the frame.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Joint">
            <summary>
            Structure to define a single joint.
            </summary>
            <remarks>
            The position and orientation together defines the coordinate system for the given joint. They are defined relative
            to the sensor global coordinate system.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Joint.Vector3Size">
            <summary>
            Size of <see cref="T:System.Numerics.Vector3" /> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Joint.QuaternionSize">
            <summary>
            Size of <see cref="F:Microsoft.Azure.Kinect.BodyTracking.Joint.Quaternion" /> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Joint.Size">
            <summary>
            Size of <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Joint" /> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Joint.Position">
            <summary>
            The position of the joint specified in millimeters.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Joint.Quaternion">
            <summary>
            The orientation of the joint specified in normalized quaternion.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Joint.ConfidenceLevel">
            <summary>
            The confidence level of the joint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel">
            <summary>
            This enumeration specifies the joint confidence level.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel.None">
            <summary>
            The joint is out of range (too far from depth camera)
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel.Low">
            <summary>
            The joint is not observed (likely due to occlusion), predicted joint pose
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel.Medium">
            <summary>
            Medium confidence in joint pose. Current SDK will only provide joints up to this confidence level
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel.High">
            <summary>
            High confidence in joint pose. Placeholder for future SDK
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel.Count">
            <summary>
            The total number of confidence levels.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.JointId">
            <summary>
            Model fitting joint definition.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.Pelvis">
            <summary>
            Pelvis
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.SpineNavel">
            <summary>
            Spine navel
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.SpineChest">
            <summary>
            Spine chest
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.Neck">
            <summary>
            Neck
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ClavicleLeft">
            <summary>
            Left clavicle
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ShoulderLeft">
            <summary>
            Left shoulder
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ElbowLeft">
            <summary>
            Left elbow
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.WristLeft">
            <summary>
            Left wrist
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.HandLeft">
            <summary>
            Left hand
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.HandTipLeft">
            <summary>
            Left hand tip
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ThumbLeft">
            <summary>
            Left thumb
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ClavicleRight">
            <summary>
            Right clavicle
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ShoulderRight">
            <summary>
            Right shoulder
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ElbowRight">
            <summary>
            Right elbow
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.WristRight">
            <summary>
            Right wrist
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.HandRight">
            <summary>
            Right hand
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.HandTipRight">
            <summary>
            Right hand tip
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.ThumbRight">
            <summary>
            Right thumb
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.HipLeft">
            <summary>
            Left hip
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.KneeLeft">
            <summary>
            Left knee
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.AnkleLeft">
            <summary>
            Left ankle
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.FootLeft">
            <summary>
            Left foot
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.HipRight">
            <summary>
            Right hip
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.KneeRight">
            <summary>
            Right knee
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.AnkleRight">
            <summary>
            Right ankle
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.FootRight">
            <summary>
            Right foot
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.Head">
            <summary>
            Head
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.Nose">
            <summary>
            Nose
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.EyeLeft">
            <summary>
            Left eye
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.EarLeft">
            <summary>
            Left ear
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.EyeRight">
            <summary>
            Right eye
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.EarRight">
            <summary>
            Right ear
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.JointId.Count">
            <summary>
            Number of different joints defined in this enumeration.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.Vector3Size">
            <summary>
            Size of <see cref="T:System.Numerics.Vector3" /> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.QuaternionSize">
            <summary>
            Size of <see cref="T:System.Numerics.Quaternion" /> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.Size">
            <summary>
            Size of <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Native.Joint" /> structure.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.PositionX">
            <summary>
            The position of the joint specified in millimeters (X component)
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.PositionY">
            <summary>
            The position of the joint specified in millimeters (Y component)
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.PositionZ">
            <summary>
            The position of the joint specified in millimeters (Z component)
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.QuaternionW">
            <summary>
            The orientation of the joint specified in normalized quaternion (W component).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.QuaternionX">
            <summary>
            The orientation of the joint specified in normalized quaternion (X component).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.QuaternionY">
            <summary>
            The orientation of the joint specified in normalized quaternion (Y component).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.QuaternionZ">
            <summary>
            The orientation of the joint specified in normalized quaternion (Z component).
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Native.Joint.ConfidenceLevel">
            <summary>
            The confidence level of the joint. <see cref="T:Microsoft.Azure.Kinect.BodyTracking.JointConfidenceLevel" />
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.SensorOrientation">
            <summary>
            Sensor mounting orientation types.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.SensorOrientation.Default">
            <summary>
            Mount the sensor at its default orientation
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.SensorOrientation.Clockwise90">
            <summary>
            Clockwisely rotate the sensor 90 degree
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.SensorOrientation.CounterClockwise90">
            <summary>
            Counter-clockwisely rotate the sensor 90 degrees
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.SensorOrientation.Flip180">
            <summary>
            Mount the sensor upside-down
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Skeleton">
            <summary>
            Structure to define joints for skeleton.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Skeleton.JointCount">
            <summary>
            Total number of joints.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.Skeleton.data">
            <summary>
            Memory buffer needed to marshal data from native.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Skeleton.GetJoint(Microsoft.Azure.Kinect.BodyTracking.JointId)">
            <summary>
            Gets joint of the body.
            </summary>
            <param name="joint">Specified the joint by type.</param>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Skeleton.GetJoint(System.Int32)">
            <summary>
            Gets joint of the body.
            </summary>
            <param name="index">Specified the joint by index.</param>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.Tracker">
            <summary>
            Represents Azure Kinect body tracking component.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Create(Microsoft.Azure.Kinect.Sensor.Calibration,Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration)">
            <summary>
            Create a body tracking component.
            </summary>
            <param name="calibration">The sensor calibration that will be used for capture processing.</param>
            <param name="configuration">The configuration we want to run the tracker in. This can be initialized with <see cref="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.Default" />.</param>
            <returns>New body tracking component.</returns>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.SetTemporalSmooting(System.Single)">
            <summary>
            Control the temporal smoothing across frames.
            </summary>
            <param name="smoothingFactor">Set between 0 for no smoothing and 1 for full smoothing. Less smoothing will increase the responsiveness of the detected skeletons but will cause more positional and orientational jitters.</param>
            <remarks>The default smoothness value is 0.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.EnqueueCapture(Microsoft.Azure.Kinect.Sensor.Capture,System.TimeSpan)">
             <summary>
             Add a Azure Kinect sensor capture to the tracker input queue to generate its body tracking result asynchronously.
             </summary>
             <param name="capture">Azure Kinect sensor capture returned by <see cref="M:Microsoft.Azure.Kinect.Sensor.Device.GetCapture" />() from Azure Kinect Sensor SDK. It should contain the depth data for this function to work. Otherwise the function will return failure.</param>
             <param name="timeout">Time the function should block waiting to add the sensor capture to the tracker process queue.</param>
             <remarks>
             Add a Azure Kinect sensor capture to the tracker input queue so that it can be processed asynchronously to generate the body tracking
             result. The processed results will be added to an output queue maintained by this tracker instance. Call
             <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.TimeSpan,System.Boolean)" /> to get the result and pop it from the output queue.
             If the input queue or output queue is full, this function will block up until the timeout is reached.
            
             Upon successfully insert a sensor capture to the input queue this function will return success.
            
             This function will fail when either the tracker is shut down by <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Shutdown" /> API,
             or an internal problem is encountered before adding to the input queue: such as low memory condition,
             <see cref="T:Microsoft.Azure.Kinect.Sensor.Capture" /> not containing the depth data, or other unexpected issues.
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.EnqueueCapture(Microsoft.Azure.Kinect.Sensor.Capture)">
            <summary>
            Add a k4a sensor capture to the tracker input queue to generate its body tracking result asynchronously.
            </summary>
            <param name="capture">Azure Kinect sensor capture returned by <see cref="M:Microsoft.Azure.Kinect.Sensor.Device.GetCapture" />() from Azure Kinect Sensor SDK. It should contain the depth data for this function to work. Otherwise the function will return failure.</param>
            <remarks>This is an infinite timeout function version of <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.EnqueueCapture(Microsoft.Azure.Kinect.Sensor.Capture,System.TimeSpan)" />.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.TimeSpan,System.Boolean)">
             <summary>
             Gets the next available body frame.
             </summary>
             <param name="timeout">Time the function should block waiting for the body frame. 0 is a check of the queue without blocking.</param>
             <param name="throwOnTimeout">If set to <c>false</c>, on timeout failure <c>null</c> will be returned instead of throwing exception.</param>
             <returns>If successful this contains a handle to a body frame object.</returns>
             <remarks>
             Retrieves the next available body frame result and pop it from the output queue in this tracker instance. If a new body
             frame is not currently available, this function will block up until the timeout is reached. The SDK will buffer at
             least three body frames worth of data before stopping new capture being queued by <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.EnqueueCapture(Microsoft.Azure.Kinect.Sensor.Capture,System.TimeSpan)" />.
            
             Upon successfully reads a body frame this function will return success.
            
             This function will fail when either the tracker is shut down by <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Shutdown" /> API
             and the remaining tracker queue is empty, or an internal problem is encountered: such as low memory condition,
             other unexpected issues.
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.Boolean)">
            <summary>
            Gets the next available body frame.
            </summary>
            <param name="throwOnTimeout">If set to <c>false</c>, on timeout failure <c>null</c> will be returned instead of throwing exception.</param>
            <returns>If successful this contains a handle to a body frame object.</returns>
            <remarks>This is an infinite timeout function version of <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.TimeSpan,System.Boolean)" />.</remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Shutdown">
             <summary>
             Shutdown the tracker so that no further capture can be added to the input queue.
             </summary>
             <remarks>
             Once the tracker is shutdown, <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.EnqueueCapture(Microsoft.Azure.Kinect.Sensor.Capture,System.TimeSpan)" /> API will always immediately return failure.
            
             If there are remaining catpures in the tracker queue after the tracker is shutdown, <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.TimeSpan,System.Boolean)" /> can
             still return successfully. Once the tracker queue is empty, the <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.TimeSpan,System.Boolean)" /> call will always immediately
             return failure.
            
             This function may be called while another thread is blocking in <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.EnqueueCapture(Microsoft.Azure.Kinect.Sensor.Capture,System.TimeSpan)" /> or <see cref="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.PopResult(System.TimeSpan,System.Boolean)" />.
             Calling this function while another thread is in that function will result in that function returning a failure.
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Azure.Kinect.BodyTracking.Tracker" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Azure.Kinect.BodyTracking.Tracker.Dispose(System.Boolean)">
            <summary>
            Disposes the resources held by the tracker.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration">
            <summary>
            Configuration parameters for a Azure Kinect body tracker.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.SensorOrientation">
            <summary>
            The sensor mounting orientation type.
            </summary>
            <remarks>
            Setting the correct orientation can help the body tracker to achieve more accurate body tracking results.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.ProcessingMode">
            <summary>
            Specify whether to use CPU only mode or GPU mode to run the tracker.
            </summary>
            <remarks>
            The CPU only mode doesn't require the machine to have a GPU to run this SDK. But it will be much slower than the GPU mode.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.GpuDeviceId">
            <summary>
            Specify the GPU device ID to run the tracker.
            </summary>
            <remarks>
            The setting is only effective if the <see cref="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.ProcessingMode" /> setting is set to <see cref="F:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode.Gpu" />.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.ModelPath">
            <summary>
            Specify the model file name and location used by the tracker. 
            </summary>
            <remarks>
            If specified, the tracker will use this model instead of the default one.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerConfiguration.Default">
            <summary>
            Default configuration setting for Azure Kinect body tracking component.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode">
            <summary>
            Tracker processing mode types.
            </summary>
            <remarks>
            The CPU only mode doesn't require the machine to have a GPU to run this SDK. But it will be much slower
            than the GPU mode.
            </remarks>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode.Gpu">
            <summary>
            SDK will use GPU mode to run the tracker.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode.Cpu">
            <summary>
            SDK will use CPU only mode to run the tracker.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode.Cuda">
            <summary>
            SDK will use ONNX Cuda EP to run the tracker.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode.TensorRT">
            <summary>
            SDK will use ONNX TensorRT EP to run the tracker.
            </summary>
        </member>
        <member name="F:Microsoft.Azure.Kinect.BodyTracking.TrackerProcessingMode.DirectML">
            <summary>
            SDK will use ONNX DirectML EP to run the tracker.
            </summary>
        </member>
    </members>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256" /><DigestValue>aVdg42z1bPVz9bZUS1KwhjKAHQNxQCZDWM/8QI7iGqE=</DigestValue></Reference></SignedInfo><SignatureValue>CyDrCJbkKqixVDidjtj492SGGm8017gZkqTKtXBvsijPZeXin7/T3tZdwnFM0GciSkxDkRy6co9kIcQchjigHdzOmwW2k9fMv4iW6YhSYFF5hrjSOFD/K6A5/XW4IbtuyrzmVWrvdqnLwANY37lh+0AYCESzVNPAPT8Ap3mQiX2KOlGL9HdrAi/yWmvhv84uGv3PiKNOK6zNCjkqG4iWnWWLo91kmXONAvY3lhnLEd75GvqIIeyw5dHApbye8aY62haT3s1v1AVRYdhNORlXylhdgwBRK3tHYO0JLXkqfOGrm6pNyloFAVdqZrIRlD9M8ayB8nIz6HA2ZXW8vnXDJw==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>y4cR8KtzoR/uCfkl+Kkv1UBvB8m3HB+7ZxvgVKq17m3xrgxWD2dvbgrh30JTtZcoC4DKSeBnoev+qaEOVZAyn1bLJ+mgNTwsyIfIjjzEPTI7t7CxfUp/j87monuATa6dDLmSwxF4FWMdljY5s6nMQu3WPUgt85zoealMtr55lsoAu2/ZI9HdyaxrY3OaudFn1d1i1wEB5HkUTrCRQWX1xRqEr0ZYxRVAI1P83YT/dj/tSYkUUYpFcv7KiITA2Pu7VXc5RNn8Jyjr/S0oYCnshHr4DJdAdRauxNmHgWSheipYZmIvQhNd+dHJ01KFOGKUEp2aNGAJ2np0RAy3xRik3Q==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509Certificate>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</X509Certificate><X509Certificate>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</X509Certificate><X509Certificate>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</X509Certificate></X509Data></KeyInfo><Object Id="ts-countersig"><X509Data><X509Certificate>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</X509Certificate><X509Certificate>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</X509Certificate></X509Data><CounterSignature ts-format="cms-timestamp-message" xmlns="http://schemas.microsoft.com/xmldsig/timestamp/2003">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</CounterSignature></Object></Signature></doc>
